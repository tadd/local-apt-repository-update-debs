#!/bin/bash -eu
set -o pipefail

DEBS=${DEBS:-/srv/local-apt-repository}
CONFS=${CONFS:-/etc/local-apt-repository-fetch-deb}

declare -r progname=$(basename $0)

dumpvar() {
    declare -p "$1" | sed -r 's/^[^=]*=\(?//; s/\)?$//'
}

pp() {
    echo -n "$1: " >&2
    dumpvar $1 >&2
}

extract_array() {
    local -n ret=$1 s=$2
    eval "ret=($s)"
}

expand_repos() {
    local -n ret=$1
    if [[ $ret == */* ]]; then
        return
    fi
    ret=$ret/$ret
}

expand_pkg() {
    local -n ret=$1 repo=$2
    if [[ $ret == *.deb ]]; then
        return
    fi
    if [[ -z "$ret" ]]; then
        ret=${repo#*/}
    fi
    ret="${ret}_%v_%a.deb"
}

expand_conf() {
    local -n ret=$1
    local -r line="$(echo "$2" | sed 's/ *#.*//')"
    local -ra row=(${line//:/ })
    local proto=${row[0]}
    ret=([proto]=$proto)
    case $proto in
        https|http)
            ret+=([url]="$line")
            ;;
        github)
            local repos=${row[1]} pkg=${row[2]-}
            expand_repos repos
            expand_pkg pkg repos
            ret+=([repos]=$repos [pkg]=$pkg)
            ;;
        *)
            echo unknown protocol: "'${entry[proto]}'" in "$line" >&2
            exit 2
            ;;
    esac
}

load_conf() {
    local -r path=$CONFS/sources
    local -n ret=$1

    local line
    local -A entry
    while read -r line; do
        expand_conf entry "$line"
        ret+=("$(dumpvar entry)")
    done < $path
}

declare -r wget='wget --no-verbose'
fetch_direct() {
    local -r debug=0
    local -r url="$1"
    pushd "$DEBS" >/dev/null
    if (( debug )); then
        pwd
        echo "$url" >&2
        popd >/dev/null
        return
    fi
    $wget --content-disposition -N "$url"
    popd >/dev/null
}

github_latest_version() {
    local -r base="$1"
    $wget --spider -S "$base" 2>&1|sed -r 's|  Location: .*/v?([^/]+)$|\1|p;d'
}

github_url_base() {
    local -r repos="$1"
    echo "https://github.com/$repos/releases/latest/download"
}

declare -r arch=$(dpkg --print-architecture)
github_format_pkg() {
    local -r pkg=$1 v=$2
    echo $pkg | sed "s/%a/$arch/; s/%v/$v/"
}

github_url() {
    local -n e=$1
    local -r repos="${e[repos]}"
    local -r base="$(github_url_base $repos)"
    local -r ver=$(github_latest_version "$base")
    local -r pkg="$(github_format_pkg "${e[pkg]}" $ver)"
    echo "$base/$pkg"
}


fetch_github() {
    local -nr ent=$1
    local -r url="$(github_url ent)"
    fetch_direct "$url"
}

fetch() {
    local -rn cnf=$1
    local -A entry
    local buf
    for buf in "${cnf[@]}"; do
        extract_array entry buf
        case ${entry[proto]} in
            https|http)
                fetch_direct "${entry[url]}" &
                ;;
            *)
                fetch_${entry[proto]} entry &
                ;;
        esac
    done
    wait
}

main() {
    local -a conf
    load_conf conf
    fetch conf
}

main "$@"
