#!/bin/bash -eu

DEBS=${DEBS:-/srv/local-apt-repository}
CONFS=${CONFS:-/etc/local-apt-repository-fetch-deb}

dumpvar() {
    declare -p "$1" | sed -r 's/^[^=]*=\(?//; s/\)?$//'
}

pp() {
    echo -n "$1: " >&2
    dumpvar $1 >&2
}

extract_array() {
    local -n ret=$1 s=$2
    eval "ret=($s)"
}

github_expand_conf() {
    local -n ret2=$1
    local -nr rw=$2
    local repos=${rw[1]} pkg=${rw[2]-}
    github_expand_repos repos
    github_expand_pkg pkg repos
    ret2+=([repos]=$repos [pkg]=$pkg)
}

github_expand_repos() {
    local -n ret=$1
    if [[ $ret == */* ]]; then
        return
    fi
    ret=$ret/$ret
}

github_expand_pkg() {
    local -n ret=$1
    local -nr repo=$2
    if [[ $ret == *.deb ]]; then
        return
    fi
    if [[ -z "$ret" ]]; then
        ret=${repo#*/}
    fi
    ret="${ret}_%v_%a.deb"
}

expand_conf() {
    local -n ret=$1
    local -r line="$(echo "$2" | sed 's/ *#.*//')"
    local -ra row=(${line//:/ })
    local proto=${row[0]}
    ret=([proto]=$proto)
    case $proto in
        https|http)
            ret+=([url]="$line")
            ;;
        github)
            github_expand_conf ret row
            ;;
        *)
            echo unknown protocol: "'$proto'" in "$line" >&2
            exit 2
            ;;
    esac
}

load_conf() {
    local -r path=$CONFS/sources
    local -n ret=$1

    local line
    local -A entry
    while read -r line; do
        expand_conf entry "$line"
        ret+=("$(dumpvar entry)")
    done < $path
}

fetch_direct() {
    local -r url="$1"
    pushd "$DEBS" >/dev/null
    if (( debug )); then
        echo "$url" >&2
        popd >/dev/null
        return
    fi
    $wget --content-disposition -N "$url"
    popd >/dev/null
}

github_latest_version() {
    local -n ret=$1
    local -r base="$2"
    ret=$($wget --spider -S "$base" 2>&1|sed -r 's|  Location: .*/v?([^/]+)$|\1|p;d')
}

github_url_base() {
    local -n ret=$1
    local -r repos="$2"
    ret="https://github.com/$repos/releases/latest/download"
}

github_format_pkg() {
    local -n ret=$1
    local -r pk=$2 v=$3
    ret=$(echo $pk | sed "s/%a/$arch/; s/%v/$v/")
}

github_url() {
    local -n ret=$1 e=$2
    local -r repos="${e[repos]}"
    local base ver pkg
    github_url_base base $repos
    github_latest_version ver "$base"
    github_format_pkg pkg "${e[pkg]}" $ver
    ret="$base/$pkg"
}


fetch_github() {
    local -nr ent=$1
    local url
    github_url url ent
    fetch_direct "$url"
}

fetch() {
    local -rn cnf=$1
    local -A entry
    local buf
    for buf in "${cnf[@]}"; do
        extract_array entry buf
        case ${entry[proto]} in
            https|http)
                fetch_direct "${entry[url]}" &
                ;;
            *)
                fetch_${entry[proto]} entry &
                ;;
        esac
    done
    wait
}

main() {
    # globals
    local -r arch=$(dpkg --print-architecture)
    local -r wget='wget --no-verbose'
    local -r progname=$(basename $0)
    local -r debug=0

    local -a conf
    load_conf conf
    fetch conf
}

main "$@"
